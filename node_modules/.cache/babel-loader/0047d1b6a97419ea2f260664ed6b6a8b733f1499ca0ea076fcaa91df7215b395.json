{"ast":null,"code":"var _jsxFileName = \"/Users/agustinalima/Documents/Trabajos/votingSystemSolcre-dashboard/src/components/candidates/VotesList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VotesList() {\n  _s();\n  const [votes, setVotes] = useState([]);\n  const [candidatesAndVotersData, setCandidatesAndVotersData] = useState({});\n  useEffect(() => {\n    Promise.all([fetch('http://localhost:3002/api/allVotes').then(response => response.json()), fetch('http://localhost:3002/api/allCandidates').then(response => response.json())]).then(([votesData, candidatesData]) => {\n      // Combinar candidatos y votantes en un solo array\n      const candidatesAndVoters = [...candidatesData.data, ...votesData.data.filter(vote => vote.is_candidate === 0)];\n\n      // Crear un mapa usando el ID como clave y nombre y apellido como valor\n      const candidatesAndVotersMap = {};\n      candidatesAndVoters.forEach(item => {\n        candidatesAndVotersMap[item.id] = `${item.name} ${item.lastName}`;\n      });\n      setVotes(votesData.data);\n      setCandidatesAndVotersData(candidatesAndVotersMap);\n    }).catch(error => console.error(error));\n  }, []);\n\n  // Función para formatear la fecha como día y mes\n  const formatDate = dateString => {\n    const options = {\n      day: 'numeric',\n      month: 'short'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container-categoria list2\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Detalles de los votos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID del Voto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Candidato o Votante\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Fecha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: votes.map(vote => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: vote.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: candidatesAndVotersData[vote.candidate_id]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatDate(vote.date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), \" \"]\n        }, vote.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(VotesList, \"af7MWuuD1f/wXsDW/v0RtPPPJv0=\");\n_c = VotesList;\nexport default VotesList;\nvar _c;\n$RefreshReg$(_c, \"VotesList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","VotesList","_s","votes","setVotes","candidatesAndVotersData","setCandidatesAndVotersData","Promise","all","fetch","then","response","json","votesData","candidatesData","candidatesAndVoters","data","filter","vote","is_candidate","candidatesAndVotersMap","forEach","item","id","name","lastName","catch","error","console","formatDate","dateString","options","day","month","Date","toLocaleDateString","undefined","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","candidate_id","date","_c","$RefreshReg$"],"sources":["/Users/agustinalima/Documents/Trabajos/votingSystemSolcre-dashboard/src/components/candidates/VotesList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction VotesList() {\n  const [votes, setVotes] = useState([]);\n  const [candidatesAndVotersData, setCandidatesAndVotersData] = useState({});\n\n  useEffect(() => {\n    Promise.all([\n      fetch('http://localhost:3002/api/allVotes').then((response) => response.json()),\n      fetch('http://localhost:3002/api/allCandidates').then((response) => response.json())\n    ])\n      .then(([votesData, candidatesData]) => {\n        // Combinar candidatos y votantes en un solo array\n        const candidatesAndVoters = [...candidatesData.data, ...votesData.data.filter(vote => vote.is_candidate === 0)];\n\n        // Crear un mapa usando el ID como clave y nombre y apellido como valor\n        const candidatesAndVotersMap = {};\n        candidatesAndVoters.forEach(item => {\n          candidatesAndVotersMap[item.id] = `${item.name} ${item.lastName}`;\n        });\n\n        setVotes(votesData.data);\n        setCandidatesAndVotersData(candidatesAndVotersMap);\n      })\n      .catch((error) => console.error(error));\n  }, []);\n\n  // Función para formatear la fecha como día y mes\n  const formatDate = (dateString) => {\n    const options = { day: 'numeric', month: 'short' };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  return (\n    <div className=\"table-container-categoria list2\">\n      <h2>Detalles de los votos</h2>\n\n      <table>\n        <thead>\n          <tr>\n            <th>ID del Voto</th>\n            <th>Candidato o Votante</th>\n            <th>Fecha</th>\n          </tr>\n        </thead>\n        <tbody>\n          {votes.map((vote) => (\n            <tr key={vote.id}>\n              <td>{vote.id}</td>\n              <td>{candidatesAndVotersData[vote.candidate_id]}</td> {/* Usar el mapa para obtener nombre y apellido del candidato o votante */}\n              <td>{formatDate(vote.date)}</td> {/* Formatear la fecha usando la función formatDate */}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default VotesList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,uBAAuB,EAAEC,0BAA0B,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1ED,SAAS,CAAC,MAAM;IACdU,OAAO,CAACC,GAAG,CAAC,CACVC,KAAK,CAAC,oCAAoC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,EAC/EH,KAAK,CAAC,yCAAyC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACrF,CAAC,CACCF,IAAI,CAAC,CAAC,CAACG,SAAS,EAAEC,cAAc,CAAC,KAAK;MACrC;MACA,MAAMC,mBAAmB,GAAG,CAAC,GAAGD,cAAc,CAACE,IAAI,EAAE,GAAGH,SAAS,CAACG,IAAI,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,YAAY,KAAK,CAAC,CAAC,CAAC;;MAE/G;MACA,MAAMC,sBAAsB,GAAG,CAAC,CAAC;MACjCL,mBAAmB,CAACM,OAAO,CAACC,IAAI,IAAI;QAClCF,sBAAsB,CAACE,IAAI,CAACC,EAAE,CAAC,GAAI,GAAED,IAAI,CAACE,IAAK,IAAGF,IAAI,CAACG,QAAS,EAAC;MACnE,CAAC,CAAC;MAEFrB,QAAQ,CAACS,SAAS,CAACG,IAAI,CAAC;MACxBV,0BAA0B,CAACc,sBAAsB,CAAC;IACpD,CAAC,CAAC,CACDM,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,UAAU,GAAIC,UAAU,IAAK;IACjC,MAAMC,OAAO,GAAG;MAAEC,GAAG,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAQ,CAAC;IAClD,OAAO,IAAIC,IAAI,CAACJ,UAAU,CAAC,CAACK,kBAAkB,CAACC,SAAS,EAAEL,OAAO,CAAC;EACpE,CAAC;EAED,oBACE/B,OAAA;IAAKqC,SAAS,EAAC,iCAAiC;IAAAC,QAAA,gBAC9CtC,OAAA;MAAAsC,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE9B1C,OAAA;MAAAsC,QAAA,gBACEtC,OAAA;QAAAsC,QAAA,eACEtC,OAAA;UAAAsC,QAAA,gBACEtC,OAAA;YAAAsC,QAAA,EAAI;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpB1C,OAAA;YAAAsC,QAAA,EAAI;UAAmB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5B1C,OAAA;YAAAsC,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACR1C,OAAA;QAAAsC,QAAA,EACGnC,KAAK,CAACwC,GAAG,CAAEzB,IAAI,iBACdlB,OAAA;UAAAsC,QAAA,gBACEtC,OAAA;YAAAsC,QAAA,EAAKpB,IAAI,CAACK;UAAE;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAClB1C,OAAA;YAAAsC,QAAA,EAAKjC,uBAAuB,CAACa,IAAI,CAAC0B,YAAY;UAAC;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,KAAC,eACtD1C,OAAA;YAAAsC,QAAA,EAAKT,UAAU,CAACX,IAAI,CAAC2B,IAAI;UAAC;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,KAAC;QAAA,GAH1BxB,IAAI,CAACK,EAAE;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIZ,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACxC,EAAA,CAvDQD,SAAS;AAAA6C,EAAA,GAAT7C,SAAS;AAyDlB,eAAeA,SAAS;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}