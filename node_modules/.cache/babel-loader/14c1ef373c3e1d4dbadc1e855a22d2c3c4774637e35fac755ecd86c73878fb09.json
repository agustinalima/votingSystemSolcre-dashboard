{"ast":null,"code":"var _jsxFileName = \"/Users/agustinalima/Documents/Trabajos/votingSystemSolcre-dashboard/src/components/login/Form.js\",\n  _s = $RefreshSig$();\nimport '../css/cards.css';\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form() {\n  _s();\n  // ... (estado y funciones del formulario)\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Nuevo estado para controlar la redirección\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      // ... (código para enviar la solicitud a la API y verificar las credenciales)\n\n      if (response.ok) {\n        console.log('Inicio de sesión exitoso');\n        setIsLoggedIn(true); // Actualiza el estado a true si el inicio de sesión es exitoso\n      } else {\n        console.log('Credenciales incorrectas');\n        // Mostrar mensaje de error al usuario\n      }\n    } catch (error) {\n      console.error('Error al iniciar sesión:', error);\n    }\n  };\n\n  // Si el usuario está autenticado, redirigir al dashboard\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n\n  // ... (resto del código del formulario)\n}\n_s(Form, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","Redirect","jsxDEV","_jsxDEV","Form","_s","isLoggedIn","setIsLoggedIn","handleSubmit","event","preventDefault","response","ok","console","log","error","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/agustinalima/Documents/Trabajos/votingSystemSolcre-dashboard/src/components/login/Form.js"],"sourcesContent":["import '../css/cards.css'\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\n\nfunction Form() {\n  // ... (estado y funciones del formulario)\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Nuevo estado para controlar la redirección\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      // ... (código para enviar la solicitud a la API y verificar las credenciales)\n\n      if (response.ok) {\n        console.log('Inicio de sesión exitoso');\n        setIsLoggedIn(true); // Actualiza el estado a true si el inicio de sesión es exitoso\n      } else {\n        console.log('Credenciales incorrectas');\n        // Mostrar mensaje de error al usuario\n      }\n    } catch (error) {\n      console.error('Error al iniciar sesión:', error);\n    }\n  };\n\n  // Si el usuario está autenticado, redirigir al dashboard\n  if (isLoggedIn) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  // ... (resto del código del formulario)\n}\n\n\n\nexport default Form;\n"],"mappings":";;AAAA,OAAO,kBAAkB;AACzB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd;;EAEA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAErD,MAAMQ,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAI;MACF;;MAEA,IAAIC,QAAQ,CAACC,EAAE,EAAE;QACfC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;QACvCP,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;MACvB,CAAC,MAAM;QACLM,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;QACvC;MACF;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;;EAED;EACA,IAAIT,UAAU,EAAE;IACd,oBAAOH,OAAA,CAACF,QAAQ;MAACe,EAAE,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACrC;;EAEA;AACF;AAACf,EAAA,CA7BQD,IAAI;AAAAiB,EAAA,GAAJjB,IAAI;AAiCb,eAAeA,IAAI;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}