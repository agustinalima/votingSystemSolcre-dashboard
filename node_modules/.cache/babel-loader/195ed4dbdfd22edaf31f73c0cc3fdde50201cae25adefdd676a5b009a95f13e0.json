{"ast":null,"code":"var _jsxFileName = \"/Users/agustinalima/Documents/Trabajos/votingSystemSolcre-dashboard/src/components/dashboard/CardChart.js\",\n  _s = $RefreshSig$();\nimport '../css/cards.css';\nimport React, { useEffect, useState } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardChart() {\n  _s();\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const responses = await Promise.all([fetch('https://tienda-sound.onrender.com/productos/api/categoria1'), fetch('https://tienda-sound.onrender.com/productos/api/categoria2'), fetch('https://tienda-sound.onrender.com/productos/api/categoria3'), fetch('https://tienda-sound.onrender.com/productos/api/categoria4'), fetch('https://tienda-sound.onrender.com/productos/api/categoria5'), fetch('https://tienda-sound.onrender.com/productos/api/categoria6')]);\n        const data = await Promise.all(responses.map(response => response.json()));\n        const totals = data.map(responseData => responseData.total);\n        setData(totals);\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, [data, isLoading]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cardChart\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dataChart\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Productos por\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Categor\\xEDa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icono\",\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        width: 600,\n        height: 200,\n        data: data.map((Total, index) => ({\n          name: `${index + 1}`,\n          Total\n        })),\n        margin: {\n          right: 100\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"2 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"Total\",\n          fill: \"#4631FF\",\n          barSize: 40\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(CardChart, \"cUIHirocPIQDoBhSWLVYEdhEgBU=\");\n_c = CardChart;\nexport default CardChart;\nvar _c;\n$RefreshReg$(_c, \"CardChart\");","map":{"version":3,"names":["React","useEffect","useState","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","jsxDEV","_jsxDEV","CardChart","_s","data","setData","isLoading","setIsLoading","fetchData","responses","Promise","all","fetch","map","response","json","totals","responseData","total","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","width","height","Total","index","name","margin","right","strokeDasharray","dataKey","fill","barSize","_c","$RefreshReg$"],"sources":["/Users/agustinalima/Documents/Trabajos/votingSystemSolcre-dashboard/src/components/dashboard/CardChart.js"],"sourcesContent":["import '../css/cards.css'\nimport React, { useEffect, useState } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\n\nfunction CardChart() {\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const responses = await Promise.all([\n          fetch('https://tienda-sound.onrender.com/productos/api/categoria1'),\n          fetch('https://tienda-sound.onrender.com/productos/api/categoria2'),\n          fetch('https://tienda-sound.onrender.com/productos/api/categoria3'),\n          fetch('https://tienda-sound.onrender.com/productos/api/categoria4'),\n          fetch('https://tienda-sound.onrender.com/productos/api/categoria5'),\n          fetch('https://tienda-sound.onrender.com/productos/api/categoria6')\n        ]);\n        \n        const data = await Promise.all(responses.map(response => response.json()));\n        const totals = data.map(responseData => responseData.total);\n\n       setData(totals);\n       setIsLoading(false);\n      } catch (error) {\n     console.error('Error fetching data:', error);\n      }\n      };\n\n      fetchData();\n  }, [data, isLoading]);\n\n  if (isLoading) {\n    return <div>Cargando...</div>;\n  }\n\n  return (\n\n    <div className='cardChart'>\n\n      <div className='dataChart'>\n        <p>Productos por</p>\n        <h2>Categor√≠a</h2>\n      </div>\n\n      <div className='icono'>\n        <BarChart\n          width={600}\n          height={200}\n          data={data.map((Total, index) => ({ name: `${index + 1}`, Total }))}\n          margin={{right: 100}}\n        >\n          <CartesianGrid strokeDasharray=\"2 2\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Bar dataKey=\"Total\" fill=\"#4631FF\" barSize={40} />\n        </BarChart>\n      </div>\n\n    </div>\n  );\n}\n\n\n\n\nexport default CardChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}